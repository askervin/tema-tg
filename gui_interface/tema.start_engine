#!/bin/sh
# Copyright (c) 2006-2010 Tampere University of Technology
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

if [ "$1" = "" ]; then
    echo Usage: `basename $0` SESSION_TAG 1>&2
    exit 1
fi

cannot_create_dir() {
    echo "Cannot create temporary directory" 1>&2
    exit 1
}

# Extract mbtc

cd ${HOME}

export SESSION_TAG="${1}"
export WORKING_DIR="${HOME}/WorkSpace/${SESSION_TAG}"


if [ `which tema.testengine` ]; then
    ENGINE_CMD="tema.testengine"
elif [ `which tema` ]; then
    ENGINE_CMD="tema testengine"
else
    exit 1
fi
#if [ `which tema.filterexpand` ]; then
#    FILTEREXPAND="tema.filterexpand"
#elif [ `which tema` ]; then
#    FILTEREXPAND="tema filterexpand"
#else
#    exit 1
#fi
if [ `which tema.composemodel` ]; then
    COMPOSE_CMD="tema.composemodel"
elif [ `which tema` ]; then
    COMPOSE_CMD="tema composemodel"
else
    exit 1
fi

if [ `which tema.generatetestconf` ]; then
    GEN_CMD="tema.generatetestconf"
elif [ `which tema` ]; then
    GEN_CMD="tema generatetestconf"
else
    exit 1
fi

mkdir ${WORKING_DIR} >/dev/null 2>&1 || cannot_create_dir

cd ${WORKING_DIR}

cat > MBTC_${$}

# Get Model
# TODO: Error handling
mkdir MODEL_${$}
cd MODEL_${$}
tar xzf ../MBTC_${$}
rm ../MBTC_${$}

cd ..

# Prepare model
if [ -f MODEL_${$}/testconf.conf ]; then
    echo -n "Creating test configuration ... "
    $GEN_CMD  MODEL_${$} MODEL_${$}/testconf.conf .
#    python ${TEMA_MODEL_TOOLS}/generate-testconf/generateTestconf.py MODEL_${$} MODEL_${$}/testconf.conf .
    echo "Done"
else
    exit 1
fi

cp MODEL_${$}/engine.prms .

# TODO: Error handling
echo -n "Composing model ... "
$COMPOSE_CMD compose.conf >/dev/null
echo "Done"

#echo -n "Filtering model ... "
#mv combined-rules.ext combined-rules.ext,orig
#$FILTEREXPAND combined-rules.ext,orig > combined-rules.ext
#echo "Done"
# Start test

echo "Engine parameters"

cat engine.prms

echo ".END engine parameters"

( xargs --delimiter='\n' --arg-file engine.prms $ENGINE_CMD ) &
XARG_PID=$!

wait $XARG_PID

cd ${HOME}

bin/tema.kill_engine $SESSION_TAG

rm -rf $WORKING_DIR

echo "Stopping test run"
